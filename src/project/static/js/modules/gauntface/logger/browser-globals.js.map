{
  "version": 3,
  "sources": ["../src/browser/browser.js", "../src/types/_LogLevels.js", "../src/shared/_AbstractLogger.js", "../src/types/_LogColors.js", "../src/browser/_BrowserLogger.js", "../src/browser/browser-globals.js"],
  "sourcesContent": ["import {BrowserLogger} from './_BrowserLogger.js';\nimport * as LogLevels from '../types/_LogLevels.js';\n\nconst logger = new BrowserLogger();\nexport {BrowserLogger as Logger, logger, LogLevels};", "export const DEBUG = 0;\nexport const INFO = 1;\nexport const LOG = 2;\nexport const WARN = 3;\nexport const ERROR = 4;\nexport const GROUP = 5;\nexport const SILENCE = 6;\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6} LogLevel\n */\n", "import * as LogLevels from '../types/_LogLevels.js';\n\n/**\n * @typedef {{ prefix?: string|Object}} LoggerOpts\n */\n\nexport const DEFAULT_PREFIXES = {\n  [LogLevels.DEBUG]: '\uD83D\uDC1B',\n  [LogLevels.INFO]: '\u2139\uFE0F',\n  [LogLevels.LOG]: '\uD83D\uDCAC',\n  [LogLevels.WARN]: '\u26A0\uFE0F',\n  [LogLevels.ERROR]: '\u2620\uFE0F',\n  [LogLevels.GROUP]: '\uD83E\uDDF5',\n};\n\n/**\n * @abstract\n */\nexport class AbstractLogger {\n  /**\n   * @property {LoggerOpts} opts?\n   * @private\n   */\n  /**\n   * @property {LogLevel} currentLogLevel\n   * @private\n   */\n\n  /**\n   *\n   * @param {LoggerOpts|void} opts\n   */\n  constructor(opts) {\n    this.opts = opts || {};\n    this.setPrefix(this.opts.prefix);\n    this.currentLogLevel = this.getDefaultLogLevel();\n  }\n\n  /**\n   * @param {string|object} prefix\n   */\n  setPrefix(prefix) {\n    if (!prefix) {\n      this.opts.prefix = DEFAULT_PREFIXES;\n    } else if (typeof prefix == 'object') {\n      this.opts.prefix = {};\n      for (const k of Object.keys(DEFAULT_PREFIXES)) {\n        this.opts.prefix[k] = prefix[k] || DEFAULT_PREFIXES[k];\n      }\n    } else {\n      this.opts.prefix = prefix;\n    }\n  }\n\n  /**\n   * @param {LogLevels.LogLevel} logLevel\n   */\n  setLogLevel(logLevel) {\n    this.currentLogLevel = logLevel;\n  }\n\n  /**\n   * @param  {...any} args\n   */\n  debug(...args) {\n    this.print(console.debug, LogLevels.DEBUG, args);\n  }\n\n  /**\n   * @param  {...any} args\n   */\n  info(...args) {\n    this.print(console.info, LogLevels.INFO, args);\n  }\n\n  /**\n   * @param  {...any} args\n   */\n  log(...args) {\n    this.print(console.log, LogLevels.LOG, args);\n  }\n\n  /**\n   * @param  {...any} args\n   */\n  warn(...args) {\n    this.print(console.warn, LogLevels.WARN, args);\n  }\n\n  /**\n   * @param  {...any} args\n   */\n  error(...args) {\n    this.print(console.error, LogLevels.ERROR, args);\n  }\n\n  /**\n   * @param  {...any} args\n   */\n  group(...args) {\n    this.print(console.group, LogLevels.GROUP, args);\n  }\n\n  /**\n   * @param  {...any} args\n   */\n  groupCollapsed(...args) {\n    this.print(console.groupCollapsed, LogLevels.GROUP, args);\n  }\n\n  groupEnd() {\n    console.groupEnd();\n  }\n\n  /**\n   * @private\n   * @param {Function} consoleFunc\n   * @param {LogLevels.LogLevel} logLevel\n   * @param {any[]} args\n   * @returns\n   */\n  print(consoleFunc, logLevel, args) {\n    if (this.currentLogLevel > logLevel) {\n      return;\n    }\n\n    consoleFunc(...this.getArgs(logLevel, args));\n  }\n\n  /**\n   * @private\n   * @param {LogLevels.LogLevel} logLevel\n   * @param {any[]} args\n   * @returns any[]\n   */\n  getArgs(logLevel, args) {\n    const prefix = this.getPrefix(logLevel);\n    if (prefix) {\n      return [...prefix, ...args];\n    }\n    return args;\n  }\n\n  /**\n   * @private\n   * @param {LogLevels.LogLevel} logLevel\n   * @returns string[]\n   */\n  getPrefix(logLevel) {\n    let pre = this.opts.prefix;\n    if (!pre) {\n      pre = DEFAULT_PREFIXES;\n    }\n\n    let s = pre;\n    if (typeof s == 'object') {\n      s = pre[logLevel]\n    }\n    return this.colorPrefix(logLevel, s);\n  }\n\n  /**\n   * @protected\n   * @returns LogLevels.LogLevel\n   */\n  getDefaultLogLevel() {\n    return LogLevels.DEBUG;\n  }\n\n  /**\n   * @protected\n   * @abstract\n   * @param {LogLevels.LogLevel} level\n   * @param {string} prefix\n   * @returns []string\n   * colorPrefix(level, prefix);\n   */\n}\n", "/**\n * @typedef {{red: number, green: number, blue: number}} RGBColor\n */\nexport const DEBUG = {\n  // #636e72\n  red: 99,\n  green: 110,\n  blue: 114,\n};\nexport const INFO = {\n  // #487eb0\n  red: 72,\n  green: 126,\n  blue: 176,\n};\nexport const LOG = {\n  // #4cd137\n  red: 76,\n  green: 209,\n  blue: 55,\n};\nexport const WARN = {\n  // #e1b12c\n  red: 225,\n  green: 177,\n  blue: 44,\n};\nexport const ERROR = {\n  // #e74c3c\n  red: 231,\n  green: 76,\n  blue: 60,\n};\nexport const GROUP = {\n  // #00a8ff\n  red: 0,\n  green: 168,\n  blue: 255,\n};\n", "import {AbstractLogger} from '../shared/_AbstractLogger.js';\nimport * as LogLevels from '../types/_LogLevels.js';\nimport * as LogColors from '../types/_LogColors.js';\n\nexport class BrowserLogger extends AbstractLogger {\n  /**\n   * @protected\n   * @param {LogLevels.LogLevel} logLevel\n   * @param {string} prefix\n   * @returns string[]\n   */\n  colorPrefix(logLevel,prefix) {\n    return [`%c${prefix}`, this.getLevelCSS(logLevel)];\n  }\n\n  /**\n   * @private\n   * @param {LogLevels.LogLevel} logLevel\n   * @returns string\n   */\n  getLevelCSS(logLevel) {\n    /**\n     * @param {LogColors.RGBColor} color\n     * @returns string\n     */\n    function getStyles(color) {\n      return `background: rgb(${color.red}, ${color.green}, ${color.blue}); color: white; padding: 2px 0.5em; border-radius: 0.5em`;\n    }\n\n    switch(logLevel) {\n      case LogLevels.DEBUG:\n        return getStyles(LogColors.DEBUG);\n      case LogLevels.INFO:\n        return getStyles(LogColors.INFO);\n      case LogLevels.WARN:\n        return getStyles(LogColors.WARN);\n      case LogLevels.ERROR:\n        return getStyles(LogColors.ERROR);\n      case LogLevels.GROUP:\n        return getStyles(LogColors.GROUP);\n      case LogLevels.LOG:\n      default:\n        return getStyles(LogColors.LOG);\n    }\n  }\n}\n", "import * as globals from './browser.js';\nwindow['gauntface'] = window['gauntface'] || {};\nObject.assign(window['gauntface'], globals);"],
  "mappings": "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",
  "names": []
}
