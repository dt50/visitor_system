[tool.poetry]
name = "src"
version = "0.1.0"
description = "Template for django make with coockiecutter"
authors = ["qsethuk <alexfretka@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "3.12.4"
Django = "5.0.1"
cookiecutter = "^2.5.0"
django-jazzmin = "3.0.0"
django-environ = "^0.11.2"
sphinx = "^7.2.6"
black = "^23.12.1"
isort = "^5.13.2"
mypy = "^1.8.0"
ruff = "^0.1.11"
djlint = "^1.34.1"
pylint = "^3.0.3"
coverage = "^7.4.0"
psycopg-binary = "^3.1.16"
django-debug-toolbar = "^4.2.0"
gunicorn = "^21.2.0"
whitenoise = "^6.6.0"
django-extensions = "^3.2.3"
argon2-cffi = "^23.1.0"
jinja2 = "^3.1.2"
django-model-utils = "^4.3.1"
django-crispy-forms = "^2.1"
python-slugify = "^8.0.1"
pillow = "^10.2.0"
uvicorn = "^0.25.0"
werkzeug = "^3.0.1"
ipdb = "^0.13.13"
watchfiles = "^0.21.0"
pytest-sugar = "^0.9.7"
django-stubs = "^4.2.7"
factory-boy = "^3.3.0"
django-coverage-plugin = "^3.1.0"
pytest-django = "^4.7.0"
pylint-django = "^2.5.5"
pylint-celery = "^0.3"
stubs = "^1.0.0"
django-filter = "^23.5"
colorama = "^0.4.6"
python-calamine = "^0.1.7"
pandas = "^2.1.4"
django-sortedm2m = "^3.1.1"
line-profiler = "^4.1.2"
psycopg2 = "^2.9.9"
django-bulk-update-or-create = "^0.3.0"
django-recurrence = "^1.11.1"
django-rosetta = "^0.10.0"
pyasyncore = "^1.0.3"
pytest-cov = "^4.1.0"
pytest = "^8.0.0"
faker = "^23.1.0"
django-tables2 = "^2.7.0"
pre-commit = "^3.6.2"
django-dirtyfields = "^1.9.2"
django-easy-audit = "^1.3.6"
pydotplus = "^2.0.2"
django-axes = { extras = ["ipware"], version = "^6.4.0" }
django-ajax-selects = "^3.0.2"
crispy-bootstrap5 = "^2024.2"
django-widget-tweaks = "^1.5.0"
django-json-widget = "^2.0.1"
nplusone = "^1.0.0"
prompt-toolkit = "^3.0.43"
django-hijack = "^3.4.5"
randomcolor = "^0.4.4.6"
django-phonenumber-field = {extras = ["phonenumbers"], version = "^8.0.0"}
django-redis = "^5.4.0"
celery = {extras = ["auth", "librabbitmq", "msgpack", "redis"], version = "^5.4.0"}
django-celery-results = "^2.5.1"
django-celery-beat = "^2.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ==== Coverage ====
[tool.coverage.run]
include = ["src"]
omit = ["*/migrations/*", "*/tests/*"]
plugins = ["django_coverage_plugin"]

# ==== Ruff ====
[tool.ruff]
include = ["src/**/*.py"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".github",
    ".hg",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "migrations",
    "node_modules",
    "static",
]
line-length = 119
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = ["A", "B", "C4", "E", "F", "I", "DJ", "INP", "TID", "YTT"]
ignore = ["E402", "F403", "F405", "I001", "B026"]
# fixable = ["F401", "NPY001", "RUF100"]
fixable = ["A", "B", "C4", "E", "F", "I", "TID"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.format]
exclude = ["*.pyi"]
quote-style = "double"
indent-style = "tab"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"


[tool.mypy.overrides]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"


# ==== djLint ====
[tool.djlint]
blank_line_after_tag = "load,extends"
close_void_tags = true
format_css = true
format_js = true
# TODO: remove T002 when fixed https://github.com/Riverside-Healthcare/djLint/issues/687
ignore = "H006,H030,H031,T002"
include = "H017,H035"
indent = 2
max_line_length = 119
profile = "django"

[tool.djlint.css]
indent_size = 2

[tool.djlint.js]
indent_size = 2
